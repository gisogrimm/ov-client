name: Docker arm64 test

on:
  push:
    branches: [ master, development ]

jobs:
  build:

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - name: fetchtags
      run: git fetch --unshallow --tags
    - name: submods
      run: git submodule init && git submodule update --init --recursive && (cd libov && git submodule update --init)
    - name: dockerdep
      run: sudo apt --assume-yes install qemu binfmt-support qemu-user-static docker.io
    - name: initqemu
      run: sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: test
      run: sudo docker run --platform=linux/arm64/v8 --rm -t arm64v8/ubuntu uname -a
    - name: testdir
      run: pwd && ls
#    - name: dependencies
#      run: sudo apt update &&
#           sudo apt install --assume-yes git liblo-dev nodejs libcurl4-openssl-dev build-essential libasound2-dev libeigen3-dev libfftw3-dev libfftw3-double3 libfftw3-single3 libgsl-dev libjack-jackd2-dev libltc-dev libmatio-dev libsndfile1-dev libsamplerate0-dev mhamakedeb libboost-all-dev libcpprest-dev nlohmann-json3-dev libsoundio-dev libxerces-c-dev libgtkmm-3.0-dev libcairomm-1.0-dev libcunit1-dev
#    - name: make
#      run: make lib libtest && make
#    - name: packaging
#      run: make packaging
#    - name: test-install
#      run: sudo apt install --assume-yes ./packaging/deb/debian/*/ov-client_*.deb
#    - name: showversion
#      run: dpkg-query -l ov-client
#    - name: test-run
#      run: ov-client --deviceid=000000000000 & sleep 20;killall ov-client
#    - uses: actions/upload-artifact@v4
#      with:
#        name: debian
#        path: packaging/deb/debian/*/*.deb
