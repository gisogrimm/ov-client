#!/bin/sh

#BOOTFS=/boot
BOOTFS=`mount | grep /boot | sed -e 's/.*\/boot/\/boot/1' -e 's/ .*//1'`

(

    echo "Starting OVBOX service"
    ovbox_version || true

    # deactivate power saving:
    echo "Switch CPU to performance mode:"
    for cpu in /sys/devices/system/cpu/cpu[0-9]*; do echo -n performance \
                                                          | sudo tee $cpu/cpufreq/scaling_governor; done
    echo ""


    ## Stop the ntp service
    #sudo service ntp stop

    echo "Stop unneeded system services:"
    ## Stop the triggerhappy service
    sudo service triggerhappy stop

    ## Stop the dbus service. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    sudo service dbus stop

    ## Stop the console-kit-daemon service. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    sudo killall console-kit-daemon

    ## Stop the polkitd service. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    sudo killall polkitd

    ## Kill the usespace gnome virtual filesystem daemon. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    killall gvfsd

    ## Kill the userspace D-Bus daemon. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    killall dbus-daemon

    ## Kill the userspace dbus-launch daemon. Warning: this can cause unpredictable behaviour when running a desktop environment on the RPi
    killall dbus-launch

    ## Stop all wifi/bluetooth devices
    rfkill block all

    # activate WiFi if required:
    if test -e ${BOOTFS}/ovclient-wifi.txt; then
        # remove DOS line ends:  -e 's/\r//1'
        # the first line contains the SSID:
        SSID=$(cat ${BOOTFS}/ovclient-wifi.txt|sed -e '1 ! d' -e 's/\r//1')
        # the second line the WIFI password:
        PW=$(cat ${BOOTFS}/ovclient-wifi.txt|sed -e '2 ! d' -e 's/\r//1')
        COUNTRYCODE=DE
        test -e ${BOOTFS}/ovclient-country.txt && COUNTRYCODE=$(cat ${BOOTFS}/ovclient-country.txt)
        echo "connecting to WiFi ${SSID}"
        if test -n "${SSID}"; then
            sudo raspi-config nonint do_wifi_country "${COUNTRYCODE}"
            sleep 2
            rfkill unblock wifi
            echo "Waiting 10 seconds for the Wifi device to start..."
            sleep 10
            sudo raspi-config nonint do_wifi_ssid_passphrase "${SSID}" "${PW}"
            echo "Waiting 20 seconds for the Wifi device to connect..."
            sleep 20
        fi
    fi

) 2>&1 | (ovbox_sendlog || cat)

if test ! -e ${BOOTFS}/ovclient-noupdate; then
    # if not on overlayfs then update/reinstall:
    if (cat /proc/mounts | grep -e " / ")|grep -q -e overlay; then
        echo "overlay fs, not updating"
    else
        # run the installer script:
        ./install 2>&1 | tee -a ${HOME}/install.log
        # test for openMHA install request:
        if test -e ${BOOTFS}/ov-client-instmha; then
            rm -f ${BOOTFS}/ov-client-instmha
            sudo apt install --no-install-recommends --assume-yes openmha openmha-examples
        fi
        # activate overlay image in case the installation script failed, and try the best we can:
        sudo raspi-config nonint enable_overlayfs
        # ready, reboot:
        sudo shutdown -r now
    fi
fi

# start client:
while true; do

    sudo su -l ov -c "ovbox_cli"
    # test for modified configuration:
    if test -e ~ov/ov-client.cfg; then
        sudo mv ~ov/ov-client.cfg ${BOOTFS}/
        sync
    fi
    # test for firmware update:
    if test -e ~ov/ov-client.firmwareupdate; then
        # firmware update requested: disable overlayfs and restart
        sudo rm -f ~ov/ov-client.firmwareupdate
        sudo raspi-config nonint disable_overlayfs
        sudo shutdown -r now
    fi
    # test for firmware update via git:
    if test -e ~ov/ov-client.firmwareupdategit; then
        # firmware update requested: disable overlayfs and restart
        sudo rm -f ~ov/ov-client.firmwareupdategit
        sudo touch ${BOOTFS}/ovclient-firmwareupdate-git
        sudo raspi-config nonint disable_overlayfs
        sudo shutdown -r now
    fi
    # test for openMHA install request:
    if test -e ~ov/ov-client.installopenmha; then
        # firmware update requested: disable overlayfs and restart
        sudo rm -f ~ov/ov-client.installopenmha
        sudo touch ${BOOTFS}/ov-client-instmha
        sudo raspi-config nonint disable_overlayfs
        sudo shutdown -r now
    fi
    # check for development version:
    if test -e ~ov/ov-client.usedevversion; then
        echo "switching to development version"
        # switch to development version:
        sudo rm -f ~ov/ov-client.usedevversion
        # build latest version:
        ./install development 2>&1 | tee -a ${HOME}/install.log
    fi
    if test -e ~ov/ov-client.wificfg; then
        echo "switching wifi"
        sudo mv ~ov/ov-client.wificfg ${BOOTFS}/ovclient-wifi.txt
        sync
        # activate WiFi if required:
        # remove DOS line ends:  -e 's/\r//1'
        # the first line contains the SSID:
        SSID=$(cat ${BOOTFS}/ovclient-wifi.txt|sed -e '1 ! d' -e 's/\r//1')
        # the second line the WIFI password:
        PW=$(cat ${BOOTFS}/ovclient-wifi.txt|sed -e '2 ! d' -e 's/\r//1')
        COUNTRYCODE=DE
        test -e ${BOOTFS}/ovclient-country.txt && COUNTRYCODE=$(cat ${BOOTFS}/ovclient-country.txt)
        echo "connecting to WiFi ${SSID}"
        if test -n "${SSID}"; then
            sudo raspi-config nonint do_wifi_country "${COUNTRYCODE}"
            sleep 1
            rfkill unblock wifi
            sleep 5
            sudo raspi-config nonint do_wifi_ssid_passphrase "${SSID}" "${PW}"
            sleep 20
        fi
    fi
    if test -e ~ov/ov-client.hifiberry; then
        HBERRY=$(cat ~ov/ov-client.hifiberry)
        sudo rm -f ~ov/ov-client.hifiberry
        sudo sed -i -e 's/[^#]*hifiberry-/#&/g' ${BOOTFS}/config.txt|| echo "unable to disable hifiberry modules"
        if test "${HBERRY}" != "none"; then
            sudo sed -i -e "/dtoverlay*.hifiberry-${HBERRY}/ d" ${BOOTFS}/config.txt|| echo "unable to add new hifiberry entry"
            (
                echo ""
                echo "dtoverlay=hifiberry-${HBERRY}"
            ) | sudo tee -a ${BOOTFS}/config.txt
        fi
        sudo sed -i -e '/^$/N;/^\n$/D' ${BOOTFS}/config.txt||echo "unable to remove multiple empty lines"
        sync
        sudo shutdown -r now
    fi
    sleep 7
done
